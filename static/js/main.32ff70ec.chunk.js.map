{"version":3,"sources":["components/stepper/FileDropper.tsx","components/stepper/PatchStepper.tsx","App.tsx","serviceWorker.ts","theme.js","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","previewChip","minWidth","maxWidth","dropzoneRoot","display","flexDirection","justifyContent","FileDropper","props","classes","multiple","onChange","fileObjects","filesLimit","onDrop","showPreviews","showPreviewsInDropzone","dropzoneClass","showAlerts","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","fileCheckbox","paddingRight","radioArea","backgroundColor","padding","step","color","completed","stepLabels","UploadedFilesList","sources","_sourcesFilesMap","undefined","forEach","source","fileName","clonedList","this","Object","assign","file","name","Error","isFilePresent","keys","fileList","push","parseManifest","maybeManifest","manifest","styles","rawManifest","Array","rawSource","sourceObj","url","md5sum","parseStringAttribute","file_name","e","JSON","stringify","parseSource","rawStyle","styleObj","style","description","styleSheet","style_sheet","parseStyle","thing","PatchStepper","React","useState","activeStep","setActiveStep","outputStyle","setOutputStyle","bundleFile","setBundleFile","downloadProgress","setDownloadProgress","patchFailure","setPatchFailure","availableStyles","setAvailableStyles","snack","setSnack","sourcesFilesMap","setSourcesFilesMap","handleReset","onBundleDrop","droppedFiles","a","JSZip","loadAsync","zip","severity","message","manifestFile","async","manifestText","yaml","safeLoad","console","error","toString","onPdfsDrop","acceptedFiles","nextSourcesFilesMap","clone","errors","addFile","length","join","Promise","res","setTimeout","areAllFilesPresent","handleNext","isStepComplete","warn","submitPdfPatch","useCallback","formData","FormData","set","append","files","pdfFile","axios","post","remixApiHost","headers","responseType","then","response","fileDownload","data","catch","err","text","useEffect","className","Stepper","map","label","index","Step","key","StepLabel","StepIconProps","Container","Box","my","Button","disabled","onClick","variant","REMIX_PDF","getActionButton","m","List","dense","ListItem","ListItemIcon","ListItemText","fileNames","FormControl","FormLabel","RadioGroup","aria-label","value","event","target","FormControlLabel","control","Radio","LinearProgress","Alert","AlertTitle","getStepContent","Snackbar","open","autoHideDuration","onClose","App","remixApiUrl","process","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32ff70ec.chunk.js","sourcesContent":["import React from 'react';\nimport { DropzoneAreaBase } from 'material-ui-dropzone';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => createStyles({\n  previewChip: {\n    minWidth: 160,\n    maxWidth: 210\n  },\n  dropzoneRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n}))\n\ntype FileDropperProps = {\n  multiple: boolean\n  onChange: (acceptedFiles: File[]) => void\n}\n\nexport default function FileDropper(props: FileDropperProps) {\n  const classes = useStyles()\n  const { multiple, onChange } = props\n\n  return(\n    <DropzoneAreaBase\n      fileObjects={[]}\n      filesLimit={multiple ? 100 : 1}\n      onDrop={onChange}\n      showPreviews={false}\n      showPreviewsInDropzone={false}\n      dropzoneClass={classes.dropzoneRoot}\n      showAlerts={[\"error\"]}\n    />\n  )\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport FileDropper from './FileDropper'\nimport axios from 'axios'\nimport fileDownload from 'js-file-download'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport { LinearProgress, Box, Container, ListItem, List, ListItemText, ListItemIcon, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Snackbar } from '@material-ui/core'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport JSZip from 'jszip'\nimport yaml from 'js-yaml'\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    fileCheckbox: {\n      minWidth: 'auto',\n      paddingRight: theme.spacing(1)\n    },\n    radioArea: {\n      backgroundColor: '#fff',\n      width: '100%',\n      padding: theme.spacing(2)\n    },\n    step: {\n      \"&$completed\": {\n        color: \"#09af00\"\n      },\n    },\n    completed: {}\n  }),\n)\n\nconst SELECT_PATCH_BUNDLE = 0\nconst SELECT_PDFS = 1\nconst SELECT_STYLE = 2\nconst REMIX_PDF = 3\n\nconst stepLabels = [\n  'Upload remix bundle',\n  'Upload source PDFs',\n  'Select style',\n  'Remix PDF'\n]\n\nfunction isLastStep(step: number) {\n  return step === stepLabels.length - 1\n}\n\ntype Style = {\n  name: string\n  description: string\n  styleSheet: string\n}\n\ntype Source = {\n  url: string\n  fileName: string\n  md5sum: string\n}\n\ntype Manifest = {\n  sources: Source[]\n  styles: Style[]\n}\n\ntype RawStyle = {\n  name?: string\n  description?: string\n  style_sheet?: string\n}\ntype RawSource = {\n  url?: string\n  file_name?: string\n  md5sum?: string\n}\n\ntype RawManifest = {\n  sources?: Source[]\n  styles?: Style[]\n}\n\ntype Snack = {\n  severity: \"error\" | \"warning\" | \"info\" | \"success\"\n  message: string\n}\n\nclass UploadedFilesList {\n  _sourcesFilesMap: {\n    [filename: string]: {\n      file?: File\n      source: Source\n    }\n  } = {}\n\n  constructor(sources?: Source[]) {\n    if(sources === undefined) {\n      sources = []\n    }\n    sources.forEach(source => {\n      this._sourcesFilesMap[source.fileName] = { source }\n    })\n  }\n\n  clone(): UploadedFilesList {\n    const clonedList = new UploadedFilesList([])\n    for(const fileName in this._sourcesFilesMap) {\n      clonedList._sourcesFilesMap[fileName] = Object.assign({}, this._sourcesFilesMap[fileName])\n    }\n    return clonedList\n  }\n\n  get fileNames(): string[] {\n    return Object.keys(this._sourcesFilesMap)\n  }\n\n  get files(): File[] {\n    const fileList: File[] = []\n    for(const fileName in this._sourcesFilesMap) {\n      const file = this._sourcesFilesMap[fileName].file\n      if(file !== undefined) {\n        fileList.push(file)\n      } else {\n        throw new Error(`required file ${fileName} is missing`)\n      }\n    }\n    return fileList\n  }\n\n  addFile(file: File) {\n    if(this._sourcesFilesMap[file.name] === undefined) {\n      throw new Error(`${file.name} is not one of the required source PDF files`)\n    } else {\n      this._sourcesFilesMap[file.name].file = file\n    }\n  }\n\n  isFilePresent(fileName: string): boolean {\n    return this._sourcesFilesMap[fileName].file !== undefined\n  }\n\n  areAllFilesPresent(): boolean {\n    for(const fileName in this._sourcesFilesMap) {\n      if(!this.isFilePresent(fileName)) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\nfunction parseManifest(maybeManifest: unknown): Manifest {\n  const manifest: Manifest = {\n    sources: [],\n    styles: []\n  }\n  if (!(maybeManifest instanceof Object)) {\n    throw new Error('manifest is not an object')\n  }\n  const rawManifest = maybeManifest as RawManifest\n  if (rawManifest.sources instanceof Array) {\n    rawManifest.sources.forEach(rawSource => manifest.sources.push(parseSource(rawSource)))\n  } else {\n    throw new Error('manifest is missing sources key')\n  }\n  if (rawManifest.styles instanceof Array) {\n    rawManifest.styles.forEach(rawStyle => manifest.styles.push(parseStyle(rawStyle)))\n  } else {\n    throw new Error('manifest is missing style key')\n  }\n  return manifest\n}\n\nfunction parseSource(sourceObj: RawSource): Source {\n  const source: Source = {\n    url: \"\",\n    fileName: \"\",\n    md5sum: \"\"\n  }\n  try {\n    source.fileName = parseStringAttribute(sourceObj.file_name)\n  } catch(e) {\n    throw new Error(`${JSON.stringify(source)}\\n${e}`)\n  }\n  try {\n    source.url = parseStringAttribute(sourceObj.url)\n  } catch(e) {\n    throw new Error(`${source.fileName} url: ${e}`)\n  }\n  try {\n    source.md5sum = parseStringAttribute(sourceObj.md5sum)\n  } catch(e) {\n    throw new Error(`${source.fileName} md5sum: ${e}`)\n  }\n  return source\n}\n\nfunction parseStyle(styleObj: RawStyle): Style {\n  const style: Style = {\n    name: \"\",\n    description: \"\",\n    styleSheet: \"\"\n  }\n  try {\n    style.name = parseStringAttribute(styleObj.name)\n  } catch(e) {\n    throw new Error(`${JSON.stringify(styleObj)}\\n${e}`)\n  }\n  try {\n    style.description = parseStringAttribute(styleObj.description)\n  } catch (e) {\n    throw new Error(`${style.name} description: ${e}`)\n  }\n  try{\n    style.styleSheet = parseStringAttribute(styleObj.style_sheet)\n  } catch(e) {\n    throw new Error(`${style.name} stylesheet: ${e}`)\n  }\n  return style\n}\n\nfunction parseStringAttribute(thing: any): string {\n  if (typeof (thing) === 'string') {\n    return thing\n  } else {\n    throw new Error(thing + ' is not a string')\n  }\n}\n\ntype PatchStepperProps = {\n  remixApiHost: string\n}\n\nfunction PatchStepper(props: PatchStepperProps) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [outputStyle, setOutputStyle] = useState(\"\")\n  const [bundleFile, setBundleFile] = useState<File | undefined>()\n  const [downloadProgress, setDownloadProgress] = useState(0)\n  const [patchFailure, setPatchFailure] = useState<String | null>(null)\n  const [availableStyles, setAvailableStyles] = useState<Style[]>([])\n  const [snack, setSnack] = useState<Snack>()\n  const [sourcesFilesMap, setSourcesFilesMap] = useState(new UploadedFilesList())\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setOutputStyle(\"\")\n    setBundleFile(undefined)\n    setDownloadProgress(0)\n    setPatchFailure(null)\n    setAvailableStyles([])\n    setSnack(undefined)\n    setSourcesFilesMap(new UploadedFilesList())\n  };\n\n  const onBundleDrop = async (droppedFiles: File[]) => {\n    const bundleFile = droppedFiles[0]\n    let zip: JSZip\n    let manifestText: string\n    let manifest: Manifest\n    let rawManifest: string | object | undefined\n    try {\n      zip = await JSZip.loadAsync(bundleFile)\n    } catch (e) {\n      setSnack({severity: 'error', message: bundleFile.name + ' is not a valid zip file'})\n      return\n    }\n    const manifestFile = zip.file('manifest.yml')\n    if (manifestFile === null) {\n      setSnack({severity: 'error', message: \"Invalid patch bundle, does not contain manifest.yml\"})\n      return\n    }\n    try {\n      manifestText = await manifestFile.async(\"text\")\n      rawManifest = yaml.safeLoad(manifestText)\n    } catch(e) {\n      console.error(e)\n      setSnack({severity: 'error', message: \"Could not read manifest.yml in zip file\"})\n      return\n    }\n    try {\n      manifest = parseManifest(rawManifest)\n    } catch (e) {\n      setSnack({severity: 'error', message: \"error parsing manifest: \" + e.toString()})\n      return\n    }\n    setAvailableStyles(manifest.styles)\n    setSourcesFilesMap(new UploadedFilesList(manifest.sources))\n    setBundleFile(bundleFile)\n    setActiveStep(activeStep + 1)\n  }\n\n  const onPdfsDrop = async (acceptedFiles: File[]) => {\n    const nextSourcesFilesMap = sourcesFilesMap.clone()\n    const errors: string[] = []\n    acceptedFiles.forEach(file => {\n      try {\n        nextSourcesFilesMap.addFile(file)\n      } catch(e) {\n        errors.push(e.toString())\n      }\n    })\n    if(errors.length > 0) {\n      setSnack({severity: \"error\", message: errors.join(\", \")})\n      return\n    }\n    setSourcesFilesMap(nextSourcesFilesMap)\n    await new Promise(res => setTimeout(res, 50)) //hack: dropzone will try to update state after after this component is otherwise unmounted due to race condition\n    if(nextSourcesFilesMap.areAllFilesPresent()) {\n      setActiveStep(activeStep + 1)\n    }\n  }\n\n  const handleNext = () => {\n    if (!isStepComplete()) { //sanity check\n      console.warn(\"PatchStepper#handleNext was called when step wasn't complete.\")\n      return\n    }\n\n    setActiveStep(activeStep + 1)\n  };\n\n  const isStepComplete = (): boolean => {\n    return !!(\n      (activeStep === 0 && bundleFile !== undefined) ||\n      (activeStep === 1 && sourcesFilesMap.areAllFilesPresent()) ||\n      (activeStep === 2 && outputStyle !== \"\") ||\n      (activeStep === 3 && (downloadProgress === 100 || patchFailure))\n    )\n  }\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1)\n  }\n\n  const submitPdfPatch = useCallback(() => {\n    if (bundleFile === undefined) {\n      console.warn(\"tried to submitPdfPatch without bundleFile\")\n      return\n    }\n    setPatchFailure(null)\n    var formData = new FormData()\n    formData.set('cssName', outputStyle)\n    formData.append('bundle', bundleFile)\n    sourcesFilesMap.files.forEach(pdfFile => formData.append('pdfs', pdfFile))\n    return axios.post(`${props.remixApiHost}/api/v0/patch`, formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n      responseType: 'blob'\n    }).then(response => {\n      fileDownload(response.data, 'patched.pdf')\n      setDownloadProgress(100)\n    }).catch(err => {\n      err.response.data.text().then((error: String) => {\n        setPatchFailure(error)\n      })\n    })\n  }, [bundleFile, outputStyle, sourcesFilesMap, props.remixApiHost])\n\n  useEffect(() => {\n    if (activeStep === 3 && downloadProgress === 0 && !patchFailure) {\n      setDownloadProgress(1)\n      submitPdfPatch()\n    }\n  }, [activeStep, downloadProgress, patchFailure, submitPdfPatch])\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case SELECT_PATCH_BUNDLE:\n        return (\n          <>\n            <FileDropper key=\"patch-bundle-dropper\" multiple={false} onChange={onBundleDrop} />\n            <List dense>\n                <ListItem>\n                  <ListItemIcon className={classes.fileCheckbox}>\n                    {bundleFile ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\n                  </ListItemIcon>\n                  <ListItemText>REMIX BUNDLE ({bundleFile ? bundleFile.name : \".zip\"})</ListItemText>\n                </ListItem>\n            </List>\n          </>\n        )\n      case SELECT_PDFS:\n        return (\n          <>\n            <FileDropper key=\"pdf-dropper\" multiple={true} onChange={onPdfsDrop} />\n            <List dense>\n              {sourcesFilesMap.fileNames.map(fileName =>\n                <ListItem key={fileName}>\n                  <ListItemIcon className={classes.fileCheckbox}>\n                    {sourcesFilesMap.isFilePresent(fileName) ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon /> }\n                  </ListItemIcon>\n                  <ListItemText>{fileName}</ListItemText>\n                </ListItem>\n              )}\n            </List>\n          </>\n        )\n      case SELECT_STYLE:\n        return (\n          <Box className={classes.radioArea}>\n            <FormControl>\n              <FormLabel>Style</FormLabel>\n              <RadioGroup aria-label=\"style\" name=\"style\" className={classes.radioArea} value={outputStyle} onChange={(event) => setOutputStyle(event.target.value)}>\n                {availableStyles.map(style => (\n                  <FormControlLabel key={style.styleSheet} value={style.styleSheet} control={<Radio />} label={style.name} />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Box>\n        )\n      case REMIX_PDF:\n        if (patchFailure) {\n          return (\n            <>\n              <LinearProgress variant=\"determinate\" value={100} />\n              <Alert severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {patchFailure}<br />\n                  You can start over, fix this error, and then retry. If the error persists, contact the author of this remix.\n                </Alert>\n            </>\n          )\n        } else if (downloadProgress < 100) {\n          return (\n            <>\n              <LinearProgress />\n              <Alert severity=\"info\">\n                <AlertTitle>Patching in progress</AlertTitle>\n                This may take up to a minute.\n              </Alert>\n            </>\n          )\n        } else {\n          return (\n            <>\n              <LinearProgress variant=\"determinate\" value={100} />\n              <Alert severity=\"success\">\n                <AlertTitle>Success</AlertTitle>\n                  Your patched PDF is downloading now.\n              </Alert>\n            </>\n          )\n        }\n      default:\n        console.error(\"Unexpected step while rendering step\")\n        return null\n    }\n  }\n\n  function getActionButton() {\n    switch (activeStep) {\n      case SELECT_PATCH_BUNDLE:\n      case SELECT_PDFS:\n      case SELECT_STYLE:\n        return (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={isLastStep(activeStep) ? handleReset : handleNext}\n            className={classes.button}\n            disabled={!isStepComplete()}\n          >\n            {activeStep === REMIX_PDF - 1 ? 'Remix' : 'Next'}\n          </Button>\n        )\n      case REMIX_PDF:\n        return (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleReset}\n            className={classes.button}\n            disabled={!isStepComplete()}\n          >\n            Start Over\n          </Button>\n        )\n      default:\n        console.error(\"Unexpected step while getting action button\")\n        return null\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {stepLabels.map((label, index) => (\n          <Step completed={activeStep > index || (index === REMIX_PDF && downloadProgress === 100)} key={label}>\n            <StepLabel error={!!(index === REMIX_PDF && patchFailure)} StepIconProps={{classes: {root: classes.step, completed: classes.completed}}}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Container maxWidth=\"md\">\n        <Box my={4} >\n          <Button disabled={activeStep === 0 || activeStep === REMIX_PDF} onClick={handleBack} className={classes.button}>\n            Back\n          </Button>\n          {getActionButton()}\n        </Box>\n        <Box m={1}>\n          {getStepContent(activeStep)}\n        </Box>\n      </Container>\n      <Snackbar open={!!snack} autoHideDuration={6000} onClose={() => setSnack(undefined)} >\n        {snack && <Alert severity={snack.severity} onClose={() => setSnack(undefined)}>{snack.message}</Alert>}\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default PatchStepper","import React from 'react';\nimport PatchStepper from './components/stepper/PatchStepper';\n\nfunction App() {\n  const remixApiUrl = process.env.REACT_APP_REMIX_API_HOST\n  if(remixApiUrl === undefined) {\n    throw new Error(\"missing REACT_APP_REMIX_API\")\n  }\n  return (\n    <PatchStepper remixApiHost={remixApiUrl}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#f4f4f4',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}